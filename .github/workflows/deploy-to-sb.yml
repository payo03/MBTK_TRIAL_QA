name: Deploy Changed Metadata to MTBK_SB

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - master
    paths-ignore:
      - '.github/**'
      - '.gitignore'

jobs:
  deploy:
    if: >
      github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate to MTBK_SB
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt -a MTBK_SB
          cat sfdx_auth.txt
    
      - name: Get Changed Files
        run: |
          echo "🔁 Pull Request 기반 변경 파일 추출"
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"

          echo "📌 비교 기준: $BASE_SHA → $HEAD_SHA"
          git fetch origin master
          git diff --name-only "$BASE_SHA" "$HEAD_SHA" -- src/ > changed_files.txt

          echo "✅ 변경된 파일 목록[기본]:"
          cat changed_files.txt

          # js, html, css 파일이 변경되었으면 4종셋트를 추가
          while read -r file; do
            if [[ "$file" =~ \.js$ || "$file" =~ \.html$ || "$file" =~ \.css$ ]]; then
              # js, html, css 파일이 변경되었으면 해당 파일들 추가
              bundle_name=$(basename "$file" | cut -d. -f1)  # 파일명만 추출 (확장자 제외)
              bundle_dir=$(dirname "$file")  # 디렉토리 경로 추출

              # js, html, css 파일이 존재하는지 확인 후 추가
              for ext in js html js-meta.xml; do
                target="$bundle_dir/$bundle_name.$ext"
                if [ -f "$target" ]; then
                  # 중복 방지: 이미 추가된 파일이면 다시 추가하지 않음
                  if ! grep -Fxq "$target" changed_files.txt; then
                    echo "$target" >> changed_files.txt
                  fi
                fi
              done

              # css 파일이 있을 경우만 추가
              css_file="$bundle_dir/$bundle_name.css"
              if [ -f "$css_file" ]; then
                # 중복 방지
                if ! grep -Fxq "$css_file" changed_files.txt; then
                  echo "$css_file" >> changed_files.txt
                fi
              fi
              
              # 추가 케이스: Columns.js 파일 처리 (존재하면 추가)
              columns_file="$bundle_dir/${bundle_name}Columns.js"
              if [ -f "$columns_file" ]; then
                if ! grep -Fxq "$columns_file" changed_files.txt; then
                  echo "$columns_file" >> changed_files.txt
                fi
              fi
              
            fi
          done < changed_files.txt

          echo "✅ 변경된 파일 목록[반영]: "
          cat changed_files.txt

      - name: Copy Changed Files to deploy_src (All Metadata Types)
        run: |
          mkdir -p deploy_src
          echo "📁 복사 대상 목록:"
          cat changed_files.txt

          while read -r file; do
            if [ -f "$file" ]; then
              # LWC
              if [[ "$file" == force-app/main/default/lwc/*/* ]]; then
                bundle_dir=$(echo "$file" | cut -d/ -f1-5)
                echo "🔁 LWC 번들 복사: $bundle_dir"
                mkdir -p "deploy_src/$bundle_dir"

                # js, html, js-meta.xml, css 파일 복사
                for ext in js html js-meta.xml; do
                  for target in "$bundle_dir"/*."$ext"; do
                    if [ -f "$target" ]; then
                      cp "$target" "deploy_src/$bundle_dir/"
                      echo "📄 포함됨: $target"
                    fi
                  done
                done

              # Aura
              elif [[ "$file" == force-app/main/default/aura/*/* ]]; then
                bundle_dir=$(echo "$file" | cut -d/ -f1-5)
                echo "🔁 Aura 번들 복사: $bundle_dir"
                mkdir -p "deploy_src/$bundle_dir"

                # js, html, js-meta.xml, css 파일 복사
                for ext in js html js-meta.xml; do
                  for target in "$bundle_dir"/*."$ext"; do
                    if [ -f "$target" ]; then
                      cp "$target" "deploy_src/$bundle_dir/"
                      echo "📄 포함됨: $target"
                    fi
                  done
                done

              # 📦 기타 메타데이터 파일 복사 (Apex, VF Page 등)
              else
                mkdir -p "deploy_src/$(dirname "$file")"
                cp "$file" "deploy_src/$file"

                # 메타파일 함께 복사
                if [[ "$file" =~ \.(cls|trigger|page|component|resource|app|cmp|evt|design|tokens|svg|xml)$ ]]; then
                  if [ -f "$file-meta.xml" ]; then
                    cp "$file-meta.xml" "deploy_src/$file-meta.xml"
                    echo "📄 메타파일 복사됨: $file-meta.xml"
                  fi
                fi
              fi
            fi
          done < changed_files.txt

          echo "✅ deploy_src 디렉토리 구성 완료"
          find deploy_src || echo "🚫 복사된 파일 없음!"

      - name: Convert to Metadata API Format
        run: |
          echo "🔁 deploy_src → Metadata API 포맷 변환 시작..."
          mkdir -p deploy_zip/mdapi
          sfdx force:source:convert \
            --rootdir deploy_src \
            --outputdir deploy_zip/mdapi

          echo "📂 변환 결과 파일:"
          find deploy_zip/mdapi
          
          echo "🔧 package.xml 내용:"
          cat deploy_zip/mdapi/package.xml\

      - name: Deploy to MTBK_SB
        run: |
          if [[ -s changed_files.txt ]]; then
            echo "🚀 변경된 파일만 배포 중..."
            sfdx force:mdapi:deploy \
              -d deploy_zip/mdapi \
              -u MTBK_SB \
              --testlevel NoTestRun \
              --ignorewarnings \
              -w 10
          else
            echo "✅ 변경된 파일 없음 → 배포 생략"
          fi

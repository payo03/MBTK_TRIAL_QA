name: Deploy Changed Metadata to MTBK_SB

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate to MTBK_SB
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt -a MTBK_SB

      - name: Get Changed Files from Last Commit
        run: |
          echo "🔍 최근 커밋에서 변경된 파일 추출 중..."
          git log -1 --name-only --pretty=format: > changed_files.txt
          cat changed_files.txt

      - name: Generate package.xml
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > package.xml
          echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> package.xml

          declare -A types_map
          while read -r file; do
            case "$file" in
              force-app/main/default/classes/*.cls)
                types_map["ApexClass"]+=$(basename "$file" .cls)" "
                ;;
              force-app/main/default/triggers/*.trigger)
                types_map["ApexTrigger"]+=$(basename "$file" .trigger)" "
                ;;
              force-app/main/default/pages/*.page)
                types_map["ApexPage"]+=$(basename "$file" .page)" "
                ;;
              force-app/main/default/components/*.component)
                types_map["ApexComponent"]+=$(basename "$file" .component)" "
                ;;
              force-app/main/default/staticresources/*.resource)
                types_map["StaticResource"]+=$(basename "$file" .resource)" "
                ;;
              force-app/main/default/lwc/*/*)
                lwcName=$(echo "$file" | cut -d/ -f5)
                types_map["LightningComponentBundle"]+="$lwcName "
                ;;
              force-app/main/default/aura/*/*)
                auraName=$(echo "$file" | cut -d/ -f5)
                types_map["AuraDefinitionBundle"]+="$auraName "
                ;;
            esac
          done < changed_files.txt

          for metaType in "${!types_map[@]}"; do
            echo "  <types>" >> package.xml
            for member in ${types_map[$metaType]}; do
              echo "    <members>$member</members>" >> package.xml
            done
            echo "    <name>$metaType</name>" >> package.xml
            echo "  </types>" >> package.xml
          done

          echo "  <version>57.0</version>" >> package.xml
          echo "</Package>" >> package.xml

      - name: Convert to Metadata API Format
        run: |
          mkdir -p deploy_zip/mdapi
          sfdx force:source:convert -r force-app -d deploy_zip/mdapi -x package.xml

      - name: Deploy to MTBK_SB
        run: |
          if [[ -s changed_files.txt ]]; then
            echo "🚀 변경된 파일만 배포 중..."
            sfdx force:mdapi:deploy \
              -d deploy_zip/mdapi \
              -u MTBK_SB \
              --testlevel NoTestRun \
              --ignorewarnings \
              -w 10
          else
            echo "✅ 변경된 파일 없음 → 배포 생략"
          fi
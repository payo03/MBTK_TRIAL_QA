name: Deploy IC2 Metadata to MTBK_SB

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate to MTBK_SB
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt -a MTBK_SB

      - name: Generate package.xml for changed files only
        run: |
          mkdir -p selective-deploy
          echo "📦 Git fetch 중..."
          git fetch origin master

          echo "🔍 origin/master 와 HEAD 간의 diff 확인"
          CHANGED_FILES=$(git diff --name-only origin/master HEAD | grep -E '\.(cls|trigger|page|component|xml)$' || true)
          echo "$CHANGED_FILES" > changed_files.txt

          echo "🎯 변경된 파일 목록:"
          cat changed_files.txt

          echo '<?xml version="1.0" encoding="UTF-8"?>' > selective-deploy/package.xml
          echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> selective-deploy/package.xml

          declare -A types

          while read -r file; do
            if [[ "$file" =~ classes/(.+)\.cls$ ]]; then
              types["ApexClass"]+="${BASH_REMATCH[1]} "
            elif [[ "$file" =~ triggers/(.+)\.trigger$ ]]; then
              types["ApexTrigger"]+="${BASH_REMATCH[1]} "
            elif [[ "$file" =~ pages/(.+)\.page$ ]]; then
              types["ApexPage"]+="${BASH_REMATCH[1]} "
            elif [[ "$file" =~ components/(.+)\.component$ ]]; then
              types["ApexComponent"]+="${BASH_REMATCH[1]} "
            fi
          done < changed_files.txt

          for type in "${!types[@]}"; do
            members=${types[$type]}
            echo "  <types>" >> selective-deploy/package.xml
            for member in $members; do
              echo "    <members>$member</members>" >> selective-deploy/package.xml
            done
            echo "    <name>$type</name>" >> selective-deploy/package.xml
            echo "  </types>" >> selective-deploy/package.xml
          done

          echo '  <version>57.0</version>' >> selective-deploy/package.xml
          echo '</Package>' >> selective-deploy/package.xml

      - name: Deploy to MTBK_SB (Selective Deploy)
        run: |
          if [[ -s changed_files.txt ]]; then
            echo "🚀 변경된 파일만 배포 시작..."
            sfdx force:mdapi:deploy \
              -d src \
              -u MTBK_SB \
              -x selective-deploy/package.xml \
              --testlevel RunLocalTests \
              --ignorewarnings \
              -w 10
          else
            echo "✅ 변경된 파일 없음, 배포 생략"
          fi
name: Deploy IC2 Metadata to MTBK_SB

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate to MTBK_SB
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt -a MTBK_SB

      - name: Find Changed Files
        id: diff
        run: |
          echo "🔍 origin/master 와 HEAD 간의 변경 파일 추출 중..."
          git fetch origin master
          git diff --name-only FETCH_HEAD > changed_files.txt
          echo "📂 변경된 파일 목록:"
          cat changed_files.txt

      - name: Identify Test Classes & Create package.xml
        id: detect
        run: |
          echo "📦 package.xml 생성 및 테스트 클래스 식별 중..."

          TEST_CLASSES=""
          echo '<?xml version="1.0" encoding="UTF-8"?>' > package.xml
          echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> package.xml

          CLASS_MEMBERS=""
          while read -r file; do
            if [[ "$file" == *.cls ]]; then
              class_name=$(basename "$file" .cls)
              CLASS_MEMBERS+="    <members>${class_name}</members>\n"

              if [[ "$file" != *_test.cls ]]; then
                # 연결된 테스트 클래스 확인
                test_file="$(dirname "$file")/${class_name}_test.cls"
                if [ -f "$test_file" ]; then
                  echo "✅ 테스트 클래스 발견: ${class_name}_test"
                  TEST_CLASSES+="${class_name}_test,"
                else
                  # @Target 기반 탐색
                  target=$(grep -m1 "@Target" "$file" | sed -E 's/.*@Target[[:space:]]*:[[:space:]]*//;s/\.cls[[:space:]]*$//' | xargs)
                  if [ -n "$target" ] && [ -f "$(dirname "$file")/${target}_test.cls" ]; then
                    echo "💡 어노테이션 기반 테스트 클래스: ${target}_test"
                    TEST_CLASSES+="${target}_test,"
                  fi
                fi
              fi
            fi
          done < changed_files.txt

          if [[ -n "$CLASS_MEMBERS" ]]; then
            echo -e "$CLASS_MEMBERS" >> package.xml
            echo "    <name>ApexClass</name>" >> package.xml
          fi

          echo '    <version>57.0</version>' >> package.xml
          echo '</Package>' >> package.xml

          echo "TEST_CLASSES=$(echo $TEST_CLASSES | sed 's/,$//')" >> $GITHUB_ENV
          echo "✅ 생성된 package.xml:"
          cat package.xml

      - name: Create deploy ZIP
        run: |
          mkdir -p deploy_zip/unpackaged
          cp package.xml deploy_zip/unpackaged/

          while read -r file; do
            if [ -f "$file" ]; then
              mkdir -p "deploy_zip/unpackaged/$(dirname "$file")"
              cp "$file" "deploy_zip/unpackaged/$file"
            fi
          done < changed_files.txt

          cd deploy_zip
          zip -r deploy.zip unpackaged > /dev/null
          cd ..

      - name: Deploy to MTBK_SB (Selective Deploy)
        run: |
          if [[ -s changed_files.txt ]]; then
            echo "🚀 변경된 파일만 배포 시작..."
            if [[ -n "$TEST_CLASSES" ]]; then
              echo "✅ 실행할 테스트 클래스: $TEST_CLASSES"
              sfdx force:mdapi:deploy \
                -f deploy_zip/deploy.zip \
                -u MTBK_SB \
                --testlevel RunSpecifiedTests \
                --runtests "$TEST_CLASSES" \
                --ignorewarnings \
                -w 10
            else
              echo "ℹ️ 테스트 클래스 없음 → RunLocalTests"
              sfdx force:mdapi:deploy \
                -f deploy_zip/deploy.zip \
                -u MTBK_SB \
                --testlevel RunLocalTests \
                --ignorewarnings \
                -w 10
            fi
          else
            echo "✅ 변경된 파일 없음, 배포 생략"
          fi
name: Deploy Changed Metadata to MTBK_SB

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'
      - '.gitignore'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate to MTBK_SB
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt -a MTBK_SB

      - name: Get Changed Files from Last Commit
        run: |
          echo "🔍 최근 커밋에서 변경된 파일 추출 중..."
          git log -1 --name-only --pretty=format: > changed_files.txt
          cat changed_files.txt

      - name: Copy Changed Files to deploy_src (All Metadata Types)
        run: |
          mkdir -p deploy_src
          echo "📁 복사 대상 목록:"
          cat changed_files.txt

          while read -r file; do
            if [ -f "$file" ]; then
              # LWC
              if [[ "$file" == force-app/main/default/lwc/*/* ]]; then
                bundle_dir=$(echo "$file" | cut -d/ -f1-5)
                echo "🔁 LWC 번들 복사: $bundle_dir"
                mkdir -p "deploy_src/$bundle_dir"

                # 반드시 포함할 확장자들 (js, html, css, js-meta.xml)
                for ext in js html css js-meta.xml; do
                  for target in "$bundle_dir"/*."$ext"; do
                    if [ -f "$target" ]; then
                      cp "$target" "deploy_src/$bundle_dir/"
                      echo "📄 포함됨: $target"
                    fi
                  done
                done

              # Aura
              elif [[ "$file" == force-app/main/default/aura/*/* ]]; then
                bundle_dir=$(echo "$file" | cut -d/ -f1-5)
                echo "🔁 Aura 번들 복사: $bundle_dir"
                mkdir -p "deploy_src/$bundle_dir"
                cp -r "$bundle_dir"/* "deploy_src/$bundle_dir/"

              # 📦 기타 메타데이터 파일 복사 (Apex, VF Page 등)
              else
                mkdir -p "deploy_src/$(dirname "$file")"
                cp "$file" "deploy_src/$file"

                # 메타파일 함께 복사
                if [[ "$file" =~ \.(cls|trigger|page|component|resource|app|cmp|evt|design|tokens|svg|xml)$ ]]; then
                  if [ -f "$file-meta.xml" ]; then
                    cp "$file-meta.xml" "deploy_src/$file-meta.xml"
                    echo "📄 메타파일 복사됨: $file-meta.xml"
                  fi
                fi
              fi
            fi
          done < changed_files.txt

          echo "✅ deploy_src 디렉토리 구성 완료"
          find deploy_src || echo "🚫 복사된 파일 없음!"

      - name: Append deploy_src to sfdx-project.json
        run: |
          echo "🔧 sfdx-project.json에 deploy_src 경로 추가"
          cp sfdx-project.json sfdx-project.original.json
          jq '.packageDirectories += [{"path":"deploy_src","default":false}]' sfdx-project.original.json > sfdx-project.json
          cat sfdx-project.json

      - name: Convert to Metadata API Format
        run: |
          echo "🔁 deploy_src → Metadata API 포맷 변환 시작..."
          mkdir -p deploy_zip/mdapi
          sfdx force:source:convert \
            --rootdir deploy_src \
            --outputdir deploy_zip/mdapi

          echo "📂 변환 결과 파일:"
          find deploy_zip/mdapi
          
          echo "🔧 package.xml 내용:"
          cat deploy_zip/mdapi/package.xml\

      - name: Deploy to MTBK_SB
        run: |
          if [[ -s changed_files.txt ]]; then
            echo "🚀 변경된 파일만 배포 중..."
            sfdx force:mdapi:deploy \
              -d deploy_zip/mdapi \
              -u MTBK_SB \
              --testlevel NoTestRun \
              --ignorewarnings \
              -w 10
          else
            echo "✅ 변경된 파일 없음 → 배포 생략"
          fi

name: Deploy Changed Metadata to MTBK_SB

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate to MTBK_SB
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt -a MTBK_SB

      - name: Get Changed Files (last commit 기준)
        run: |
          echo "🔍 마지막 커밋에서 변경된 파일 추출 중..."
          git log -1 --name-only --pretty=format: > changed_files.txt
          cat changed_files.txt

      - name: Generate Package.xml
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > package.xml
          echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> package.xml

          declare -A types_map

          while read -r file; do
            if [[ "$file" == *.cls || "$file" == *.trigger || "$file" == *.page || "$file" == *.component || "$file" == *.resource ]]; then
              name=$(basename "$file")
              metaType=""
              if [[ "$file" == *".cls" ]]; then metaType="ApexClass"
              elif [[ "$file" == *".trigger" ]]; then metaType="ApexTrigger"
              elif [[ "$file" == *".page" ]]; then metaType="ApexPage"
              elif [[ "$file" == *".component" ]]; then metaType="ApexComponent"
              elif [[ "$file" == *".resource" ]]; then metaType="StaticResource"
              fi

              if [[ -n "$metaType" ]]; then
                name=${name%%.*}  # Strip extension
                types_map["$metaType"]+="${name} "
              fi
            fi
          done < changed_files.txt

          for metaType in "${!types_map[@]}"; do
            echo "  <types>" >> package.xml
            for member in ${types_map[$metaType]}; do
              echo "    <members>$member</members>" >> package.xml
            done
            echo "    <name>$metaType</name>" >> package.xml
            echo "  </types>" >> package.xml
          done

          echo "  <version>57.0</version>" >> package.xml
          echo "</Package>" >> package.xml

          echo "📦 생성된 package.xml:"
          cat package.xml

      - name: Create Deployment ZIP
        run: |
          mkdir -p deploy_zip/unpackaged/classes
          cp package.xml deploy_zip/unpackaged/

          while read -r file; do
            if [[ "$file" == src/classes/*.cls || "$file" == src/classes/*.cls-meta.xml ]]; then
              cp "$file" deploy_zip/unpackaged/classes/
            fi
          done < changed_files.txt

          cd deploy_zip
          zip -r deploy.zip unpackaged > /dev/null
          cd ..

      - name: Deploy to MTBK_SB
        run: |
          if [[ -s changed_files.txt ]]; then
            echo "🚀 변경된 파일만 배포 중..."
            sfdx force:mdapi:deploy \
              -f deploy_zip/deploy.zip \
              -u MTBK_SB \
              --testlevel NoTestRun \
              --ignorewarnings \
              -w 10
          else
            echo "✅ 변경된 파일 없음 → 배포 생략"
          fi